[user]
name = FilipeMCruz
email = 1170911@isep.ipp.pt

[web]
browser = firefox

[core]
autocrlf = input

[url "git@github.com:"]
insteadOf = https://github.com/

[url "ssh://git@bitbucket.org/"]
insteadOf = https://bitbucket.org/

[color]
ui = auto

[help]
autocorrect = 10

[color "branch"]
current = magenta bold
local = yellow bold
remote = cyan bold

[color "diff"]
meta = yellow bold
frag = magenta bold
old = red bold
new = green bold
whitespace = red reverse

[color "status"]
branch = magenta bold
added = green bold
changed = yellow bold
untracked = red bold
unmerged = "#fe8019"

[pull]
rebase = false

[alias]
ncommits = "rev-list --all --count"
ucommits = "shortlog --summary --numbered --email"
sum = log --pretty='  %C(ul "#fe8019")%h:%C(reset)%C(yellow):%><|(30)%an:%C(reset)%C(white):%s%C(reset)%C(bold red)%d%C(reset)'
lg = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) %C(italic brightwhite)at%C(reset) %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset) %C(italic brightwhite)by%C(reset) %C(ul bold "#fe8019")%an%C(reset)%n''            %C(italic brightwhite)message:%C(reset) %C(white)%s%C(reset) %C(reset)' --all
aliases = !git config -l | grep alias | cut -c 7-
snap = !git stash save 'snapshot: $(date)' && git stash apply 'stash@{0}'
send = "!f() { git add -A && git commit \"$@\" && git push; }; f"
# a = add --all
# ai = add -i
# #############
# ap = apply
# as = apply --stat
# ac = apply --check
# #############
# ama = am --abort
# amr = am --resolved
# ams = am --skip
# #############
# b = branch
# ba = branch -a
# bd = branch -d
# bdd = branch -D
# br = branch -r
# bc = rev-parse --abbrev-ref HEAD
# bu = !git rev-parse --abbrev-ref --symbolic-full-name "@{u}"
# bs = !git-branch-status
# #############
# c = commit
# ca = commit -a
# cm = commit -m
# cam = commit -am
# cem = commit --allow-empty -m
# cd = commit --amend
# cad = commit -a --amend
# ced = commit --allow-empty --amend
# #############
# cl = clone
# cld = clone --depth 1
# clg = !sh -c 'git clone git://github.com/$1 $(basename $1)' -
# clgp = !sh -c 'git clone git@github.com:$1 $(basename $1)' -
# clgu = !sh -c 'git clone git@github.com:$(git config --get user.username)/$1 $1' -
# #############
# cp = cherry-pick
# cpa = cherry-pick --abort
# cpc = cherry-pick --continue
# #############
# d = diff
# dp = diff --patience
# dc = diff --cached
# dk = diff --check
# dck = diff --cached --check
# dt = difftool
# dct = difftool --cached
# #############
# f = fetch
# fo = fetch origin
# fu = fetch upstream
# #############
# fp = format-patch
# #############
# fk = fsck
# #############
# g = grep -p
# #############
# l = log --oneline
#+
# The basic colors accepted are `normal`, `black`, `red`, `green`, `yellow`,
# `blue`, `magenta`, `cyan` and `white`.  The first color given is the
# foreground; the second is the background.  All the basic colors except
# `normal` have a bright variant that can be speficied by prefixing the
# color with `bright`, like `brightred`.
# +
# Colors may also be given as numbers between 0 and 255; these use ANSI
# 256-color mode (but note that not all terminals may support this).  If
# your terminal supports it, you may also specify 24-bit RGB values as
# hex, like `#ff0ab3`.
# +
# The accepted attributes are `bold`, `dim`, `ul`, `blink`, `reverse`,
# `italic`, and `strike`
#
# #############
# ls = ls-files
# lsf = !git ls-files | grep -i
# #############
# m = merge
# ma = merge --abort
# mc = merge --continue
# ms = merge --skip
# #############
# o = checkout
# om = checkout master
# ob = checkout -b
# opr = !sh -c 'git fo pull/$1/head:pr-$1 && git o pr-$1'
# #############
# pr = prune -v
# #############
# ps = push
# psf = push -f
# psu = push -u
# pst = push --tags
# #############
# pso = push origin
# psao = push --all origin
# psfo = push -f origin
# psuo = push -u origin
# #############
# psom = push origin master
# psaom = push --all origin master
# psfom = push -f origin master
# psuom = push -u origin master
# psoc = !git push origin $(git bc)
# psaoc = !git push --all origin $(git bc)
# psfoc = !git push -f origin $(git bc)
# psuoc = !git push -u origin $(git bc)
# psdc = !git push origin :$(git bc)
# #############
# pl = pull
# pb = pull --rebase
# #############
# plo = pull origin
# pbo = pull --rebase origin
# plom = pull origin master
# ploc = !git pull origin $(git bc)
# pbom = pull --rebase origin master
# pboc = !git pull --rebase origin $(git bc)
# #############
# plu = pull upstream
# plum = pull upstream master
# pluc = !git pull upstream $(git bc)
# pbum = pull --rebase upstream master
# pbuc = !git pull --rebase upstream $(git bc)
# #############
# rb = rebase
# rba = rebase --abort
# rbc = rebase --continue
# rbi = rebase --interactive
# rbs = rebase --skip
# #############
# re = reset
# rh = reset HEAD
# reh = reset --hard
# rem = reset --mixed
# res = reset --soft
# rehh = reset --hard HEAD
# remh = reset --mixed HEAD
# resh = reset --soft HEAD
# rehom = reset --hard origin/master
# #############
# r = remote
# ra = remote add
# rr = remote rm
# rv = remote -v
# rn = remote rename
# rp = remote prune
# rs = remote show
# rao = remote add origin
# rau = remote add upstream
# rro = remote remove origin
# rru = remote remove upstream
# rso = remote show origin
# rsu = remote show upstream
# rpo = remote prune origin
# rpu = remote prune upstream
# #############
# rmf = rm -f
# rmrf = rm -r -f
# #############
# s = status
# sb = status -s -b
# #############
# sa = stash apply
# sc = stash clear
# sd = stash drop
# sl = stash list
# sp = stash pop
# ss = stash save
# ssk = stash save -k
# sw = stash show
# st = !git stash list | wc -l 2>/dev/null | grep -oEi '[0-9][0-9]*'
# #############
# t = tag
# td = tag -d
# #############
# w = show
# wp = show -p
# wr = show -p --no-color
# #############
# svnr = svn rebase
# svnd = svn dcommit
# svnl = svn log --oneline --show-commit
# #############
# subadd = !sh -c 'git submodule add git://github.com/$1 $2/$(basename $1)' -
# subrm = !sh -c 'git submodule deinit -f -- $1 && rm -rf .git/modules/$1 && git rm -f $1' -
# subup = submodule update --init --recursive
# subpull = !git submodule foreach git pull --tags origin master
# #############
# assume = update-index --assume-unchanged
# unassume = update-index --no-assume-unchanged
# assumed = !git ls -v | grep ^h | cut -c 3-
# unassumeall = !git assumed | xargs git unassume
# assumeall = !git status -s | awk {'print $2'} | xargs git assume
# #############
# bump = !sh -c 'git commit -am \"Version bump v$1\" && git psuoc && git release $1' -
# release = !sh -c 'git tag v$1 && git pst' -
# unrelease = !sh -c 'git tag -d v$1 && git pso :v$1' -
# merged = !sh -c 'git o master && git plom && git bd $1 && git rpo' -
# bare = !sh -c 'git symbolic-ref HEAD refs/heads/$1 && git rm --cached -r . && git clean -xfd' -
# whois = !sh -c 'git log -i -1 --author=\"$1\" --pretty=\"format:%an <%ae>\"' -
# serve = daemon --reuseaddr --verbose --base-path=. --export-all ./.git
# #############
# behind = !git rev-list --left-only --count $(git bu)...HEAD
# ahead = !git rev-list --right-only --count $(git bu)...HEAD
# #############
# ours = "!f() { git checkout --ours $@ && git add $@; }; f"
# theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"
# subrepo = !sh -c 'git filter-branch --prune-empty --subdirectory-filter $1 master' -
# human = name-rev --name-only --refs=refs/heads/*
